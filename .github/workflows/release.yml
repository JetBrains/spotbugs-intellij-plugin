# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
# TODO: add push to JetBrains and maybe add release notes
name: Release Reshift Intellij Plugin

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew buildPlugin
    - name: Retrieve version
      run: |
        RAW_VERSION=`./gradlew properties | grep version`
        VERSION=`echo "${RAW_VERSION/'version: '/''}"`
        echo ::set-env name=TAG_NAME::$VERSION
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        body: |
          Reshift Intellij Plugin ${{ env.TAG_NAME }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/distributions/reshiftsecurity-intellij-${{ env.TAG_NAME }}.zip
        asset_name: reshiftsecurity-intellij-${{ env.TAG_NAME }}.zip
        asset_content_type: application/zip
    - name: Publish to JetBrains MarketPlace
      env:
        JB_PUBLISH_SECRET: ${{ secrets.JET_BRAINS_PUBLISH_TOKEN }}
      run: ./gradlew publishPlugin
